Day-17 session-17(03/09/2024)
------------------------------
Recap:
-----
-> Ansible is a powerful push based architecture
-> Wherever the ansible got installed that is called ansible server and remaining are ansible nodes 
-> We saw different types of variables 
1. play level 
2. task level 
3. from files 
4. from prompt
5. comand line args 
6. Inventory 

-> priority is high in command line args  --> it is superior 
->  Inventory is a file where you mention all the hosts that ansible server connect to...


Now in today's class:
---------------------

Ansible inventory:
------------------
we have,

# Ungrouped
190.168.1.1
190.168.1.2
190.168.1.3

[web]
172.31.38.222   # ansible-node private IP 

[web:vars]
COURSE="Ansible from inventory"
DURATION="10hrs"
LEARNER="mahalakshmi"

#backend group
[backend]
190.168.1.4
190.168.1.5
190.168.1.6

#mysql group
[mysql]
190.168.1.7
190.168.1.8
190.168.1.9

# group of groups
[servers:children]
web
backend 

[all:vars]   # for all servers 
ansible_user=ec2-user 
ansible_password=DevOps321

-> Ansible uses the commands in the background for the specified group given. 
-> command is, ansible -i inventory.ini <group-name> --list-hosts

datatypes:
-----------
string --> text
int, float. double, decimal, long etc --> number 
boolean --> true/false 
list 
map 

-> ansible is developed using python language
-> we can run ansible-playbooks inside ansible-server -> then it is localhost
hosts: web --> target IP under web group 

-> connection: local --> it will not search for username and password inside the server  

[ -> list 
{ -> map 

Conditions:
-----------
-> conditions are simple in ansible 
for example:
------------
write a playbook to check if a number is less than 10 or not 

-> Conditions are useful, becoz to decide whether a task/module should run or not 
-> In ansible we use "when" instead if 

Use case: create expense user 

1. check expense user already exist or not 
2. If exist, don't create 
3. If not exist create 

id expense -> if exit status is 0, don't create otherwise create 
-> Ansible can't guarantee module exists for everything... we can use direct commands if module not available 
command is,  ansible.builtin.command:


Error handling  --> handle the errors: -- imp for interviews 
---------------------------------------
if error comes --> we have to tell, ignore errors

Facts == varibales
-> what is gathering facts?

Ansible, before connecting to the servers/hosts it will collect entire information. so that it can take decisions based on that information

install nginx:
--------------
-> but we don't know the underline distribution 
-> if it is redhat --> ansible.builtin.dnf 
-> ubuntu --> ansible.builtin.apt
-> here dng and apt are modules 

ansible.builtin.package --> based on the pulled statistics --> package install nginx -y --> It will finds out the underline OS distribution and gives the specified package name 

loops:
-------
item --> reserved keyword 
